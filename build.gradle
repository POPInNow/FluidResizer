/*
 * Copyright (C) 2019 POP Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext {
    kotlin_version = '1.3.21'
  }
  repositories {
    google()
    mavenCentral()
    jcenter()
  }
  dependencies {
    // Android
    classpath "com.android.tools.build:gradle:3.3.2"

    // Kotlin
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:0.9.17"

    // Maven publishing
    classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"

    // Dex count
    classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.6'

    // Gradle version checker
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

ext {
  // POM info
  POM_GROUP = "com.popinnow.android.fluidresizer"
  POM_VERSION = "0.0.3-SNAPSHOT"

  minSdk = 14
  maxSdk = 28

  interpolator = "1.0.0"
  lifecycle = "2.0.0"
  fragment = "1.0.0"
}

allprojects {
  repositories {
    google()
    mavenCentral()
    jcenter()
  }
}

subprojects {
  apply plugin: 'com.github.dcendents.android-maven'
  apply plugin: 'com.github.ben-manes.versions'

  // Lint for unchecked casts and deprecated API usage
  tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
    options.deprecation = true
  }

  // gradle-versions-plugin ignore any pre-release versions
  dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
      rules.all { ComponentSelection selection ->
        boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview'].any { qualifier ->
          selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
        }
        if (rejected) {
          selection.reject('Release candidate')
        }
      }
    }
  }

  group = POM_GROUP
  version = POM_VERSION
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

